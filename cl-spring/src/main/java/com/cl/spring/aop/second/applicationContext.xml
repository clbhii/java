<?xml version="1.0" encoding="UTF-8"?>
<beans
	xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
						http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">
	
	<bean id="actor" class="com.cl.spring.aop.second.Actor"/>
	<bean id="audience" class="com.cl.spring.aop.second.Audience"></bean>
	<bean id="log" class="com.cl.spring.aop.second.Log"></bean>
	<bean id="time" class="com.cl.spring.aop.second.Time"></bean>
	
	
	<aop:config>
		<aop:pointcut id="pc" expression="within(com.cl.spring.aop.second.Actor)"/>
		<aop:pointcut id="logpc" expression="within(com.cl.spring.aop.second.Actor) or within(com.cl.spring.aop.second.Audience)"/>
		<aop:pointcut id="pc1" expression="within(com.cl.spring.aop.second.Actor) and args(aa,bb)"/>
		<aop:aspect ref="audience">
			<aop:before method="takeseat" pointcut-ref="pc" />
			<aop:after-returning method="applaud" pointcut-ref="pc"/>
			<aop:after-throwing method="protest" pointcut-ref="pc"/>
		</aop:aspect>
		<aop:aspect ref="log">
			<aop:before method="before" pointcut-ref="pc"/>
			<aop:after-returning returning="res" method="afterReturning" pointcut-ref="pc"/>
			<aop:after-throwing  throwing="e" method="afterThrowing" pointcut-ref="pc"/>
			<aop:after-throwing  throwing="e" method="throwsLog" pointcut-ref="pc"/>
			<aop:before method="logArgs" pointcut-ref="pc1"/>
		</aop:aspect>
		<aop:aspect ref="time">
			<aop:around method="around" pointcut-ref="logpc"/>
		</aop:aspect>
	</aop:config>
</beans>