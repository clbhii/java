<configuration >

  <appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
    <!-- encoders are assigned the type
         ch.qos.logback.classic.encoder.PatternLayoutEncoder by default -->
    <encoder>
    <!--定义输出日志的格式
		%d{yyyy-MM-ddHH:mm:ss.SSS}定义日期格式兼容java.text.SimpleDateFormat语法2014-03-2514:06:49.812
		%thread输出产生日志的线程名
		%-5level输出日志级别
		%logger{80}设置为80表示只输入logger最右边点符号之后的字符串，从最后一个标点符号往前数
		%msg输出应用程序提供的信息
		%n输出平台相关的分行符“\n”或者“\r\n”
		
		注意{length} 太短了，包名会省略，c.c.j.l.l.
	-->
      <pattern>%d{HH:mm:ss.SSS} [%thread] %-5level %logger{36} %C{26} %class - %msg%n</pattern>
    </encoder>
    <!-- 控制某个日志记录请求是否有效 http://blog.csdn.net/dslztx/article/details/47733127
    <filter class="ch.qos.logback.classic.filter.LevelFilter">
           <level>info</level>
           <onMatch>ACCEPT</onMatch>
            <onMismatch>DENY</onMismatch>
     </filter>-->
  </appender>

  <root level="INFO">
    <appender-ref ref="STDOUT" />
  </root>
  
  <logger name="com.cl.java.log.logback" level="info"/>
  
  <logger name="com.cl" >
  	 <level value="info"/>
     <appender-ref ref="STDOUT"/>
  </logger> 
  
  <logger name="com.cl.t1" >
  	 <level value="debug"/>
     <appender-ref ref="STDOUT"/>
  </logger> 
</configuration>